Line-by-Line Code Explanation

A = {'x': 0.6, 'y': 0.8}
B = {'x': 0.4, 'y': 0.5}
This creates two fuzzy sets A and B.

Set A contains 'x' with membership 0.6 and 'y' with 0.8

Set B contains 'x' with membership 0.4 and 'y' with 0.5

union = {}
for key in A:
    union[key] = max(A[key], B[key])
Creates an empty dictionary called union

Loops through each key in set A

For each key, it stores the higher value (maximum) from A and B into the union dictionary

This is the fuzzy union operation


print("Union of A and B:", union)
Displays the union result on the screen


intersection = {}
for key in A:
    intersection[key] = min(A[key], B[key])
Creates an empty dictionary called intersection

Loops through each key in set A

For each key, it stores the lower value (minimum) from A and B into the intersection dictionary

This is the fuzzy intersection operation


print("Intersection of A and B:", intersection)
Displays the intersection result on the screen


complement_A = {}
for key in A:
    complement_A[key] = 1 - A[key]
Creates an empty dictionary called complement_A

Loops through each key in set A

Calculates the complement by subtracting each membership value in A from 1

Stores the result in complement_A

print("Complement of A:", complement_A)
Displays the complement of set A on the screen


difference = {}
for key in A:
    difference[key] = min(A[key], 1 - B[key])
Creates an empty dictionary called difference

Loops through each key in set A

For each key, it calculates one minus the corresponding value in B

Then takes the lower value between that and the value from A

This gives the fuzzy difference (A minus B)


print("Difference of A and B:", difference)
Displays the difference between sets A and B


R1 = {}
for a in A:
    for b in B:
        R1[(a, b)] = min(A[a], B[b])
Creates an empty dictionary called R1

Performs a nested loop: for each element a in A, loop through each element b in B

For each pair (a, b), calculate the minimum between the membership values from A and B

Stores the result in a tuple key (a, b) in dictionary R1

This forms the Cartesian product (fuzzy relation) from A to B


print("Cartesian Product of A and B (R1):", R1)
Displays the result of the Cartesian product of A and B


R2 = {}
for b in B:
    for a in A:
        R2[(b, a)] = min(B[b], A[a])
Creates an empty dictionary called R2

Loops through each element b in B, then each element a in A

Calculates the minimum between B and A values

Stores it as a relation from B to A in dictionary R2

This is another fuzzy relation, reverse of R1


print("Cartesian Product of B and A (R2):", R2)
Displays the Cartesian product from B to A


composition = {}
for (a, b) in R1:
    for (b2, c) in R2:
        if b == b2:
            key = (a, c)
            composition[key] = max(composition.get(key, 0), min(R1[(a, b)], R2[(b2, c)]))
Creates an empty dictionary called composition

For every pair (a, b) in R1, loop through every pair (b2, c) in R2

If the middle elements b and b2 are the same (this forms a valid composition path), then:

Create a new key (a, c)

Compute the minimum of R1 and R2 values for this path

Take the maximum value among all such paths for the same (a, c)

Store it in the composition dictionary

This is called max-min composition in fuzzy relations


print("Max-Min Composition of R1 and R2:", composition)
Displays the final composition relation from A to A, calculated via B as an intermediate set

Summary of Output (Expected Results)
Based on the input values:

Union: the highest values from A and B

Intersection: the lowest values from A and B

Complement: one minus the values in A

Difference: lower of A's value and one minus B's value

R1: fuzzy relation from A to B

R2: fuzzy relation from B to A

Composition: result of combining R1 and R2 using max-min logic


                                                   Fuzzy Set Theory – Plain Text Version (No Formulas)
1. What is a Fuzzy Set?
A fuzzy set is a set where each element has a degree of membership ranging between 0 and 1. Unlike classical sets where an element either belongs or does not belong to a set (values are either 0 or 1), fuzzy sets allow partial membership.

Example:

ini
Copy
Edit
A = {'x': 0.6, 'y': 0.8}
This means 'x' belongs to set A with a membership of 0.6 and 'y' with 0.8.

2. Operations on Fuzzy Sets
a. Union (A ∪ B)
Union means combining two fuzzy sets.

For each element, take the maximum of its membership values in A and B.

Example:

ini
Copy
Edit
A = {'x': 0.6}, B = {'x': 0.4}
Union = {'x': max(0.6, 0.4)} => {'x': 0.6}
b. Intersection (A ∩ B)
Intersection means common elements.

For each element, take the minimum of its membership values in A and B.

Example:

ini
Copy
Edit
A = {'x': 0.6}, B = {'x': 0.4}
Intersection = {'x': min(0.6, 0.4)} => {'x': 0.4}
c. Complement (¬A)
The complement gives the degree to which an element is not in the set.

For each element, subtract its membership from 1.

Example:

ini
Copy
Edit
A = {'x': 0.6}
Complement = {'x': 1 - 0.6} => {'x': 0.4}
d. Difference (A - B)
The difference between sets A and B is calculated by:

For each element, take the minimum of A’s value and (1 - B’s value).

Example:

ini
Copy
Edit
A = {'x': 0.6}, B = {'x': 0.4}
Difference = {'x': min(0.6, 1 - 0.4)} => {'x': min(0.6, 0.6)} => {'x': 0.6}
3. Cartesian Product of Fuzzy Sets
This forms a fuzzy relation between two sets. Each pair of elements is assigned a value using the minimum of their memberships.

Example:

lua
Copy
Edit
A = {'x': 0.6, 'y': 0.8}
B = {'x': 0.4, 'y': 0.5}

Result (A × B):
('x', 'x'): min(0.6, 0.4) => 0.4
('x', 'y'): min(0.6, 0.5) => 0.5
('y', 'x'): min(0.8, 0.4) => 0.4
('y', 'y'): min(0.8, 0.5) => 0.5
4. Max-Min Composition of Fuzzy Relations
This combines two fuzzy relations where one goes from A to B, and the other from B to C.

Steps:

For each possible (a, c) pair:

Consider all b values shared between R1 (A to B) and R2 (B to C)

For each b, calculate min(R1(a, b), R2(b, c))

Then, take the maximum of all these min values to get R(a, c)

Example:
If R1 and R2 are defined on:

lua
Copy
Edit
R1('x', 'x') = 0.4
R1('x', 'y') = 0.5
R2('x', 'x') = 0.4
R2('y', 'x') = 0.5

Then R('x', 'x') = max(min(0.4, 0.4), min(0.5, 0.5)) = max(0.4, 0.5) = 0.5
5. Applications of Fuzzy Set Theory
Decision making under uncertainty

Fuzzy logic controllers (washing machines, ACs)

Medical diagnosis systems

Expert systems and AI

Pattern recognition

What is a fuzzy set?
Answer:
A fuzzy set is a type of set where elements have varying degrees of membership, ranging between 0 and 1. This is different from a classical set where an element either belongs (value 1) or does not belong (value 0). Fuzzy sets are used to represent uncertain or imprecise information. For example, in a fuzzy set representing "tall people," someone who is 5'8" might belong to the set with a degree of 0.6.

What is the difference between a crisp set and a fuzzy set?
Answer:
A crisp set has only two possible membership values: 0 or 1. This means an element either fully belongs or does not belong to the set.
In contrast, a fuzzy set allows partial membership with values between 0 and 1, allowing more flexibility to represent real-world uncertainty.

How is union of two fuzzy sets defined?
Answer:
The union of two fuzzy sets is calculated by taking the maximum of the membership values for each element that appears in either set. It shows the combined membership level of each element in the two sets.

How is intersection of two fuzzy sets defined?
Answer:
The intersection of two fuzzy sets is calculated by taking the minimum of the membership values for each element. It shows the degree to which an element belongs to both sets simultaneously.

What is the complement of a fuzzy set?
Answer:
The complement of a fuzzy set represents the degree to which an element does not belong to the set. It is calculated by subtracting the membership value from 1. For example, if an element has a membership of 0.7 in a set, its membership in the complement is 0.3.

What is the difference between two fuzzy sets?
Answer:
The difference between fuzzy set A and B is calculated for each element by taking the minimum of the value in set A and one minus the value in set B. This shows how much of set A is not part of set B.

What is a fuzzy relation?
Answer:
A fuzzy relation is a fuzzy set defined over a Cartesian product of two or more fuzzy sets. It shows the degree of relation between each pair of elements from the two sets. Each relation value lies between 0 and 1 and is usually calculated using the minimum of the individual membership values.

What is a Cartesian product of two fuzzy sets?
Answer:
The Cartesian product of two fuzzy sets forms a set of ordered pairs. The membership value of each pair is the minimum of the individual membership values of the elements in the pair. This creates a fuzzy relation between the two sets.

What is max-min composition in fuzzy sets?
Answer:
Max-min composition is a method used to combine two fuzzy relations. It works as follows: for each possible combination of the first and third sets, find all paths through the second set. For each path, compute the minimum of the two related values. Then, take the maximum of these minimum values. This shows the strength of the indirect relationship between the first and third sets.

Where is fuzzy set theory used in real life?
Answer:
Fuzzy set theory is used in areas where decisions must be made based on vague or imprecise data. Examples include washing machines that adjust cycles based on load type, air conditioners that change temperature based on comfort level, medical diagnosis systems, expert systems, traffic control, robotics, and artificial intelligence.

Why do we use fuzzy logic in decision making?
Answer:
Fuzzy logic is useful in decision making because it can handle uncertainty and partial truth. In many real-world situations, data is not black or white but lies somewhere in between. Fuzzy logic allows systems to make better, more human-like decisions based on approximate values.

What is the role of membership function in fuzzy sets?
Answer:
The membership function defines how each element in the universe is mapped to a membership value between 0 and 1 in a fuzzy set. It determines the degree to which an element belongs to the set. Different types of membership functions (like triangular, trapezoidal, Gaussian) can be used based on the problem.

Can the same element have different membership values in different fuzzy sets?
Answer:
Yes. The same element can have different membership values in different fuzzy sets depending on the context and the definition of each set. For example, a temperature value might have high membership in the set "warm" and a lower membership in the set "hot."

What is fuzzy inference system?
Answer:
A fuzzy inference system is a process that uses fuzzy logic to map inputs to outputs. It uses fuzzy sets, fuzzy rules, and fuzzy relations to make decisions. It is used in expert systems and control applications like automatic braking systems, weather prediction, and smart home devices.

How does fuzzy logic differ from traditional Boolean logic?
Answer:
Boolean logic deals with exact true or false values, whereas fuzzy logic deals with values between true and false. Boolean logic uses binary values (0 or 1), while fuzzy logic uses real values between 0 and 1 to represent partial truth.

